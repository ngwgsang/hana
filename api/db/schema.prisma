// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
model Team {
  id      Int      @id @default(autoincrement())  // Khóa chính, tự tăng
  name    String                                  // Tên của team
  agents  Agent[]                                 // Một Team có nhiều Agent
  createdAt DateTime @default(now())              // Thời gian tạo
  updatedAt DateTime @updatedAt                   // Thời gian cập nhật
}

model Agent {
  id       Int     @id @default(autoincrement())  // Khóa chính, tự tăng
  avatar   String                                 // Ảnh đại diện
  name     String                                 // Tên agent
  settings String                                   // Cấu hình dạng String
  teamId   Int                                     // Khóa ngoại liên kết với Team
  team     Team    @relation(fields: [teamId], references: [id])  // Quan hệ với Team
  createdAt DateTime @default(now())              // Thời gian tạo
  updatedAt DateTime @updatedAt                   // Thời gian cập nhật
}

model Task {
  id        Int      @id @default(autoincrement())  // Khóa chính, tự động tăng
  name      String                                   // Tên của Task
  config    String                                     // Cấu hình dạng JSON
  createdAt DateTime @default(now())                 // Thời gian tạo
  updatedAt DateTime @updatedAt                      // Thời gian cập nhật
}

model Message {
  id        Int      @id @default(autoincrement())  // Khóa chính, tự động tăng
  sender    String                                   // Người gửi
  content   String                                   // Nội dung tin nhắn
  isAct     Boolean  @default(true)                  // Trạng thái hoạt động (true/false)
  timestamp DateTime @default(now())                // Thời gian gửi tin nhắn
  createdAt DateTime @default(now())                // Thời gian tạo bản ghi
  updatedAt DateTime @updatedAt                     // Thời gian cập nhật bản ghi
}

model AnkiCard {
  id        Int       @id @default(autoincrement()) // Khóa chính
  front     String                                  // Mặt trước của thẻ
  back      String                                  // Mặt sau của thẻ
  tags      AnkiTag[]                               // Quan hệ nhiều-nhiều với tag (không cần references)
  createdAt DateTime  @default(now())              // Ngày tạo thẻ
  enrollAt  DateTime?                            // Ngày bắt đầu luyện tập
  point     Int       @default(-3)                 // Điểm số cho lịch trình
}

model AnkiTag {
  id      Int       @id @default(autoincrement()) // Khóa chính
  name    String    @unique                       // Tên tag (ví dụ: "N2", "Ngữ pháp")
  cards   AnkiCard[]                              // Quan hệ nhiều-nhiều với AnkiCard (không cần references)
}
